[Processing include.thy]
module type A = 
sig
  type a
  (**  Assertion per_a =  PER(=a=)
  *)
end

module type B = 
sig
  type a
  (**  Assertion per_a =  PER(=a=)
  *)
   
  type b
  (**  Assertion per_b =  PER(=b=)
  *)
end

module type C = 
sig
  type a
  (**  Assertion per_a =  PER(=a=)
  *)
   
  type b
  (**  Assertion per_b =  PER(=b=)
  *)
   
  type d = a * b
  (**  Assertion d_def_total = 
         forall x:a * b,  x : ||d|| <-> pi0 x : ||a|| and pi1 x : ||b||
        
       Assertion d_def_per = 
         forall y:a * b, z:a * b,  y =d= z <-> pi0 y =a= pi0 z and 
           pi1 y =b= pi1 z
  *)
end

