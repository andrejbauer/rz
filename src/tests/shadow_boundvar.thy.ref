[Processing ./shadow_boundvar.thy]
module type T =
 sig
   type s
    
   (** predicate (=s=) : s -> s -> bool *)
   (**  Assertion symmetric_s [Definitional] = 
          forall x:s, y:s,  x =s= y -> y =s= x
         
        Assertion transitive_s [Definitional] = 
          forall x:s, y:s, z:s,  x =s= y /\ y =s= z -> x =s= z
   *)
    
   val shadow : s -> s
   (**  Assertion shadow =  forall (x:||s||),  shadow x : ||s||
   *)
 end

