[Processing dependent_product.thy]
module type T = 
sig
  type s
  (**  Assertion per_s =  PER(=s=)
  *)
   
  type t
  (**  Assertion per_t =  forall (x:||s||),  PER(=t x=)
  *)
   
  val a : s * t
  (**  Assertion a_total =  pi0 a : ||s|| /\ pi1 a : ||t (pi0 a)||
  *)
   
  val b : s * t
  (**  Assertion b_total =  pi0 b : ||s|| /\ pi1 b : ||t (pi0 b)||
  *)
   
  
  (**  Assertion eq =  pi0 a =s= pi0 b /\ pi1 a =(t (pi0 a))= pi1 b
  *)
end

