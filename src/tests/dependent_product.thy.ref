[Processing dependent_product.thy]
module type T = 
sig
  type s
  (**  Assertion per_s =  PER(=s=)
  *)
   
  type t
  (**  Assertion per_t =  all (x:s).  (PER(=t=) x)
  *)
   
  val a : s * t
  (**  Assertion a_total =  pi0 a : ||s|| and (||t|| pi0 a) pi1 a
  *)
   
  val b : s * t
  (**  Assertion b_total =  pi0 b : ||s|| and (||t|| pi0 b) pi1 b
  *)
   
  
  (**  Assertion equal =  pi0 a =s= pi0 b and (=t= pi0 a) pi1 a pi1 b
  *)
end

