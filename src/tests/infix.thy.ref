[Processing ./infix.thy]
module type T =
 sig
   type s
    
   (**{v predicate (=s=) : s -> s -> bool v}*)
   (**  {v assertion symmetric_s :  forall x:s, y:s,  x =s= y -> y =s= x v}
         
        {v assertion transitive_s : 
          forall x:s, y:s, z:s,  x =s= y /\ y =s= z -> x =s= z v}
   *)
    
   (**{v predicate ||s|| : s -> bool v}*)
   (**  {v assertion support_def_s :  forall x:s,  x : ||s|| <-> x =s= x v}
   *)
    
   type ty_greater
    
   (**{v predicate (>) : s -> s -> ty_greater -> bool v}*)
   (**  {v assertion strict_(>) : 
          forall x:s, y:s, a:ty_greater,  (>) x y a -> x : ||s|| /\ y : ||s|| v}
         
        {v assertion extensional_(>) : 
          forall x:s, y:s, z:s, w:s, a:ty_greater,  x =s= z /\ y =s= w ->
            (>) x y a -> (>) z w a v}
   *)
 end

