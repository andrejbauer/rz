type token =
  | AND
  | ARROW
  | AXIOM
  | BAR
  | BACKQUOTE
  | BEGIN
  | BOOL
  | COLON
  | COMMA
  | CONSTANT
  | COROLLARY
  | END
  | EOF
  | EQUAL
  | EXISTS
  | FALSE
  | FORALL
  | HASH
  | IFF
  | IMPLY
  | IN
  | INFIXOP0 of (string)
  | INFIXOP1 of (string)
  | INFIXOP2 of (string)
  | INFIXOP3 of (string)
  | INFIXOP4 of (string)
  | INTEGER of (int)
  | LABEL of (string)
  | LAMBDA
  | LBRACE
  | LBRACK
  | LEMMA
  | LET
  | LPAREN
  | MATCH
  | NAME of (string)
  | NOT
  | ONE
  | ON
  | OR
  | PERCENT
  | PERIOD
  | PLUS
  | PREDICATE
  | PREFIXOP of (string)
  | PROPOSITION
  | RBRACE
  | RBRACK
  | RELATION
  | RPAREN
  | RZ
  | SET
  | SLASH
  | STABLE
  | STAR
  | THEOREM
  | THEORY
  | THY
  | TRUE
  | TWO
  | WITH
  | ZERO

open Parsing;;
# 2 "parser.mly"
  (* header *)
  open Syntax

  let parse_error _ =
    raise (Message.Parse (Message.loc_here 1, "parse error"))

# 74 "parser.ml"
let yytransl_const = [|
  257 (* AND *);
  258 (* ARROW *);
  259 (* AXIOM *);
  260 (* BAR *);
  261 (* BACKQUOTE *);
  262 (* BEGIN *);
  263 (* BOOL *);
  264 (* COLON *);
  265 (* COMMA *);
  266 (* CONSTANT *);
  267 (* COROLLARY *);
  268 (* END *);
    0 (* EOF *);
  269 (* EQUAL *);
  270 (* EXISTS *);
  271 (* FALSE *);
  272 (* FORALL *);
  273 (* HASH *);
  274 (* IFF *);
  275 (* IMPLY *);
  276 (* IN *);
  284 (* LAMBDA *);
  285 (* LBRACE *);
  286 (* LBRACK *);
  287 (* LEMMA *);
  288 (* LET *);
  289 (* LPAREN *);
  290 (* MATCH *);
  292 (* NOT *);
  293 (* ONE *);
  294 (* ON *);
  295 (* OR *);
  296 (* PERCENT *);
  297 (* PERIOD *);
  298 (* PLUS *);
  299 (* PREDICATE *);
  301 (* PROPOSITION *);
  302 (* RBRACE *);
  303 (* RBRACK *);
  304 (* RELATION *);
  305 (* RPAREN *);
  306 (* RZ *);
  307 (* SET *);
  308 (* SLASH *);
  309 (* STABLE *);
  310 (* STAR *);
  311 (* THEOREM *);
  312 (* THEORY *);
  313 (* THY *);
  314 (* TRUE *);
  315 (* TWO *);
  316 (* WITH *);
  317 (* ZERO *);
    0|]

let yytransl_block = [|
  277 (* INFIXOP0 *);
  278 (* INFIXOP1 *);
  279 (* INFIXOP2 *);
  280 (* INFIXOP3 *);
  281 (* INFIXOP4 *);
  282 (* INTEGER *);
  283 (* LABEL *);
  291 (* NAME *);
  300 (* PREFIXOP *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\002\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\008\000\008\000\008\000\009\000\
\009\000\010\000\010\000\005\000\005\000\005\000\005\000\005\000\
\005\000\005\000\005\000\005\000\006\000\006\000\011\000\011\000\
\011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
\011\000\012\000\012\000\013\000\013\000\013\000\013\000\004\000\
\004\000\004\000\004\000\014\000\014\000\014\000\014\000\014\000\
\014\000\014\000\014\000\014\000\014\000\014\000\016\000\016\000\
\017\000\017\000\018\000\018\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\015\000\015\000\019\000\019\000\019\000\019\000\000\000"

let yylen = "\002\000\
\007\000\000\000\002\000\002\000\004\000\004\000\004\000\004\000\
\005\000\004\000\005\000\005\000\006\000\005\000\006\000\005\000\
\005\000\005\000\005\000\005\000\000\000\001\000\003\000\001\000\
\002\000\003\000\003\000\001\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\001\000\005\000\001\000\002\000\
\001\000\001\000\001\000\001\000\003\000\005\000\007\000\003\000\
\002\000\003\000\003\000\003\000\001\000\003\000\005\000\001\000\
\001\000\001\000\003\000\001\000\001\000\001\000\005\000\002\000\
\003\000\003\000\003\000\003\000\002\000\002\000\001\000\002\000\
\003\000\003\000\003\000\003\000\001\000\003\000\003\000\002\000\
\003\000\006\000\008\000\001\000\001\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\005\000\004\000\004\000\
\004\000\003\000\003\000\004\000\003\000\006\000\005\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\104\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\028\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\037\000\000\000\000\000\
\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\
\030\000\031\000\032\000\034\000\033\000\029\000\036\000\035\000\
\000\000\000\000\000\000\025\000\000\000\000\000\043\000\000\000\
\000\000\000\000\044\000\041\000\000\000\042\000\039\000\000\000\
\000\000\000\000\000\000\000\000\000\000\061\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\060\000\062\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\023\000\000\000\000\000\000\000\040\000\
\000\000\000\000\049\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\064\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\027\000\038\000\000\000\000\000\000\000\045\000\
\000\000\000\000\000\000\000\000\000\000\067\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\066\000\065\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\093\000\000\000\000\000\000\000\068\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\099\000\000\000\000\000\046\000\
\000\000\000\000\000\000\000\000\063\000\000\000\000\000\094\000\
\000\000\000\000\000\000\000\000\000\000\047\000\000\000\000\000\
\000\000\000\000\103\000\000\000\102\000"

let yydgoto = "\002\000\
\004\000\018\000\019\000\088\000\104\000\047\000\105\000\048\000\
\049\000\075\000\089\000\090\000\091\000\106\000\147\000\107\000\
\108\000\109\000\231\000"

let yysindex = "\012\000\
\016\255\000\000\254\254\000\000\038\255\018\255\073\009\233\254\
\053\255\233\254\233\254\233\254\233\254\233\254\046\255\004\255\
\233\254\082\255\073\009\072\005\000\000\100\255\110\009\102\255\
\098\255\100\255\100\255\028\255\100\255\115\255\101\255\233\254\
\233\254\100\255\117\000\000\000\069\255\076\255\077\255\104\255\
\105\255\111\255\118\255\120\255\114\009\000\000\053\255\136\255\
\000\000\163\255\135\255\026\006\160\255\162\255\135\255\164\255\
\165\255\135\255\167\255\135\255\122\255\123\255\170\255\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\163\255\177\255\127\255\000\000\026\006\135\255\000\000\182\255\
\251\254\135\255\000\000\000\000\229\004\000\000\000\000\190\255\
\252\254\141\255\161\255\026\006\053\255\000\000\053\255\130\255\
\053\255\255\254\133\007\026\006\130\255\130\255\000\000\000\000\
\098\007\193\255\130\255\211\255\174\255\026\006\026\006\190\255\
\026\006\026\006\190\255\026\006\190\255\135\255\208\255\135\255\
\210\255\026\006\053\255\000\000\098\007\006\255\229\004\000\000\
\027\255\015\255\000\000\135\255\026\006\229\004\229\004\197\255\
\025\006\184\255\185\255\193\255\189\255\053\255\220\255\034\255\
\000\000\063\005\188\255\117\003\193\255\193\255\026\006\026\006\
\026\006\026\006\026\006\026\006\026\006\026\006\026\006\026\006\
\026\006\026\006\026\006\217\255\193\255\026\006\026\006\098\007\
\098\007\098\007\098\007\098\007\190\255\026\006\190\255\026\006\
\098\007\177\255\000\000\000\000\194\255\026\006\135\255\000\000\
\190\255\090\009\194\255\194\255\226\255\000\000\026\006\026\006\
\026\006\206\255\026\006\135\255\026\006\000\000\000\000\228\255\
\254\004\006\005\098\007\098\007\085\005\085\005\092\255\218\255\
\073\007\000\000\092\255\218\255\218\255\000\000\254\004\073\007\
\098\007\098\007\050\006\157\255\229\004\098\007\098\007\098\007\
\244\255\087\006\025\255\112\006\000\000\009\255\251\255\000\000\
\026\006\194\255\026\006\026\006\000\000\026\006\014\000\000\000\
\137\006\174\006\098\007\199\006\026\006\000\000\026\006\228\255\
\236\006\098\007\000\000\228\255\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\006\000\000\000\000\000\015\000\000\000\016\000\
\000\000\015\000\015\000\015\000\015\000\015\000\183\007\000\000\
\000\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\017\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\015\000\015\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\010\000\000\000\000\000\000\000\000\000\000\000\000\000\087\005\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\194\007\
\004\007\027\007\081\007\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\240\007\196\255\182\000\142\003\036\001\000\000\000\000\251\007\
\000\000\000\000\010\008\000\000\056\008\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\067\008\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\237\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\002\000\062\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\122\000\000\000\000\000\082\008\
\128\008\139\008\154\008\200\008\211\008\000\000\226\008\000\000\
\016\009\234\255\000\000\000\000\141\005\000\000\000\000\000\000\
\168\007\014\005\154\005\167\005\221\005\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\220\002\019\003\007\004\061\004\110\002\165\002\000\002\091\001\
\196\003\000\000\055\002\146\001\201\001\000\000\074\003\250\003\
\027\009\042\009\000\000\000\000\000\000\074\004\128\004\141\004\
\000\000\000\000\000\000\238\255\000\000\000\000\000\000\000\000\
\000\000\236\005\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\195\004\020\000\000\000\000\000\000\000\000\000\
\022\000\208\004\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\017\001\000\000\069\000\248\255\254\255\202\255\182\001\
\248\000\173\000\187\255\000\000\000\000\231\255\102\000\000\000\
\000\000\000\000\088\255"

let yytablesize = 2728
let yytable = "\022\000\
\024\000\026\000\027\000\028\000\029\000\030\000\025\000\132\000\
\034\000\020\000\238\000\021\000\001\000\046\000\050\000\131\000\
\132\000\046\000\046\000\046\000\046\000\046\000\125\000\061\000\
\062\000\046\000\132\000\020\000\142\000\021\000\182\000\023\000\
\005\000\021\000\183\000\055\000\073\000\137\000\046\000\092\000\
\128\000\023\000\074\000\021\000\146\000\148\000\032\000\133\000\
\094\000\134\000\006\000\033\000\046\000\046\000\180\000\168\000\
\169\000\181\000\170\000\171\000\045\000\172\000\021\000\184\000\
\187\000\188\000\099\000\177\000\021\000\101\000\140\000\003\000\
\129\000\237\000\007\000\149\000\150\000\102\000\186\000\251\000\
\031\000\165\000\070\000\253\000\046\000\023\000\046\000\021\000\
\046\000\046\000\138\000\103\000\139\000\035\000\141\000\143\000\
\201\000\202\000\203\000\204\000\205\000\206\000\207\000\208\000\
\209\000\210\000\211\000\212\000\213\000\051\000\052\000\215\000\
\216\000\060\000\046\000\158\000\064\000\065\000\150\000\217\000\
\178\000\218\000\058\000\112\000\066\000\067\000\115\000\219\000\
\117\000\118\000\120\000\160\000\045\000\046\000\021\000\092\000\
\222\000\223\000\224\000\194\000\226\000\079\000\228\000\162\000\
\094\000\163\000\126\000\045\000\077\000\021\000\130\000\234\000\
\068\000\069\000\045\000\045\000\021\000\021\000\132\000\070\000\
\233\000\080\000\099\000\081\000\021\000\101\000\071\000\082\000\
\072\000\083\000\078\000\084\000\110\000\102\000\111\000\124\000\
\113\000\114\000\241\000\116\000\242\000\243\000\122\000\244\000\
\085\000\123\000\173\000\103\000\175\000\127\000\249\000\132\000\
\250\000\086\000\135\000\087\000\071\000\071\000\071\000\071\000\
\185\000\071\000\136\000\071\000\071\000\071\000\071\000\071\000\
\071\000\164\000\071\000\166\000\167\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\174\000\046\000\176\000\189\000\
\191\000\192\000\071\000\239\000\071\000\193\000\071\000\071\000\
\195\000\221\000\071\000\071\000\199\000\071\000\071\000\071\000\
\071\000\071\000\214\000\071\000\071\000\133\000\071\000\071\000\
\071\000\071\000\071\000\220\000\225\000\071\000\230\000\071\000\
\235\000\160\000\070\000\070\000\070\000\070\000\240\000\070\000\
\227\000\070\000\070\000\070\000\070\000\070\000\070\000\245\000\
\070\000\002\000\037\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\026\000\021\000\037\000\024\000\098\000\101\000\
\070\000\100\000\070\000\036\000\070\000\070\000\076\000\179\000\
\070\000\070\000\229\000\070\000\070\000\070\000\070\000\070\000\
\000\000\070\000\070\000\000\000\070\000\070\000\070\000\070\000\
\070\000\000\000\000\000\070\000\000\000\070\000\069\000\069\000\
\069\000\069\000\000\000\069\000\000\000\069\000\069\000\069\000\
\069\000\069\000\069\000\000\000\069\000\000\000\000\000\069\000\
\069\000\069\000\069\000\069\000\069\000\069\000\000\000\000\000\
\000\000\000\000\000\000\000\000\069\000\000\000\069\000\000\000\
\069\000\069\000\000\000\000\000\069\000\069\000\000\000\069\000\
\069\000\069\000\069\000\069\000\000\000\069\000\069\000\000\000\
\069\000\069\000\069\000\069\000\069\000\000\000\000\000\069\000\
\000\000\069\000\072\000\072\000\072\000\072\000\000\000\072\000\
\000\000\072\000\072\000\072\000\072\000\072\000\072\000\000\000\
\072\000\000\000\000\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\000\000\000\000\000\000\000\000\000\000\000\000\
\072\000\000\000\072\000\000\000\072\000\072\000\000\000\000\000\
\072\000\072\000\000\000\072\000\072\000\072\000\072\000\072\000\
\000\000\072\000\072\000\000\000\072\000\072\000\072\000\072\000\
\072\000\000\000\000\000\072\000\000\000\072\000\077\000\077\000\
\077\000\077\000\000\000\000\000\000\000\077\000\077\000\077\000\
\077\000\077\000\077\000\000\000\000\000\000\000\000\000\077\000\
\077\000\077\000\077\000\077\000\077\000\077\000\000\000\053\000\
\054\000\056\000\057\000\059\000\077\000\000\000\000\000\063\000\
\000\000\000\000\000\000\000\000\077\000\077\000\000\000\077\000\
\077\000\000\000\077\000\077\000\000\000\077\000\077\000\000\000\
\077\000\077\000\077\000\077\000\077\000\080\000\080\000\080\000\
\080\000\077\000\119\000\121\000\080\000\080\000\080\000\080\000\
\080\000\080\000\000\000\000\000\000\000\000\000\080\000\080\000\
\080\000\080\000\080\000\080\000\080\000\000\000\000\000\000\000\
\000\000\000\000\000\000\080\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\080\000\080\000\000\000\080\000\080\000\
\000\000\080\000\080\000\000\000\080\000\080\000\000\000\080\000\
\080\000\080\000\080\000\080\000\085\000\085\000\085\000\085\000\
\080\000\000\000\000\000\085\000\085\000\085\000\085\000\085\000\
\085\000\000\000\000\000\000\000\000\000\085\000\085\000\085\000\
\085\000\085\000\085\000\085\000\000\000\000\000\000\000\000\000\
\000\000\000\000\085\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\085\000\000\000\085\000\085\000\000\000\
\085\000\085\000\000\000\085\000\085\000\000\000\085\000\085\000\
\085\000\085\000\085\000\090\000\090\000\090\000\090\000\085\000\
\000\000\000\000\090\000\090\000\090\000\090\000\090\000\090\000\
\000\000\000\000\000\000\000\000\090\000\090\000\090\000\090\000\
\090\000\090\000\090\000\000\000\000\000\000\000\000\000\000\000\
\000\000\090\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\090\000\000\000\000\000\090\000\090\000\000\000\090\000\
\090\000\000\000\090\000\090\000\000\000\090\000\090\000\090\000\
\090\000\090\000\092\000\092\000\092\000\092\000\090\000\000\000\
\000\000\092\000\092\000\092\000\092\000\092\000\092\000\000\000\
\000\000\000\000\000\000\092\000\092\000\092\000\092\000\092\000\
\092\000\092\000\000\000\000\000\000\000\000\000\000\000\000\000\
\092\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\092\000\000\000\000\000\092\000\092\000\000\000\092\000\092\000\
\000\000\092\000\092\000\000\000\092\000\092\000\092\000\092\000\
\092\000\091\000\091\000\091\000\091\000\092\000\000\000\000\000\
\091\000\091\000\091\000\091\000\091\000\091\000\000\000\000\000\
\000\000\000\000\091\000\091\000\091\000\091\000\091\000\091\000\
\091\000\000\000\000\000\000\000\000\000\000\000\000\000\091\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\091\000\
\000\000\000\000\091\000\091\000\000\000\091\000\091\000\000\000\
\091\000\091\000\000\000\091\000\091\000\091\000\091\000\091\000\
\088\000\088\000\088\000\088\000\091\000\000\000\000\000\088\000\
\088\000\088\000\088\000\088\000\088\000\000\000\000\000\000\000\
\000\000\088\000\088\000\088\000\088\000\088\000\088\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\088\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\088\000\000\000\
\000\000\088\000\088\000\000\000\088\000\088\000\000\000\088\000\
\088\000\000\000\088\000\000\000\088\000\000\000\088\000\089\000\
\089\000\089\000\089\000\088\000\000\000\000\000\089\000\089\000\
\089\000\089\000\089\000\089\000\000\000\000\000\000\000\000\000\
\089\000\089\000\089\000\089\000\089\000\089\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\089\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\089\000\000\000\000\000\
\089\000\089\000\000\000\089\000\089\000\000\000\089\000\089\000\
\000\000\089\000\000\000\089\000\000\000\089\000\086\000\086\000\
\086\000\086\000\089\000\000\000\000\000\086\000\086\000\086\000\
\086\000\086\000\086\000\000\000\000\000\000\000\000\000\086\000\
\086\000\086\000\086\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\086\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\086\000\000\000\000\000\000\000\
\086\000\000\000\086\000\086\000\000\000\086\000\086\000\000\000\
\086\000\000\000\086\000\000\000\086\000\087\000\087\000\087\000\
\087\000\086\000\000\000\000\000\087\000\087\000\087\000\087\000\
\087\000\087\000\000\000\000\000\000\000\000\000\087\000\087\000\
\087\000\087\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\087\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\087\000\000\000\000\000\000\000\087\000\
\000\000\087\000\087\000\000\000\087\000\087\000\000\000\087\000\
\000\000\087\000\000\000\087\000\074\000\074\000\074\000\074\000\
\087\000\000\000\000\000\074\000\074\000\074\000\074\000\074\000\
\000\000\000\000\000\000\000\000\000\000\074\000\074\000\074\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\074\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\074\000\000\000\000\000\000\000\074\000\000\000\
\074\000\074\000\000\000\074\000\074\000\000\000\074\000\000\000\
\074\000\000\000\074\000\081\000\081\000\081\000\081\000\074\000\
\000\000\000\000\081\000\081\000\081\000\081\000\081\000\000\000\
\000\000\000\000\000\000\000\000\081\000\081\000\081\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\081\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\081\000\000\000\000\000\000\000\081\000\000\000\081\000\
\081\000\000\000\081\000\081\000\000\000\081\000\000\000\081\000\
\000\000\081\000\073\000\073\000\073\000\073\000\081\000\000\000\
\000\000\073\000\073\000\073\000\073\000\073\000\000\000\000\000\
\000\000\000\000\000\000\073\000\073\000\073\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\073\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\073\000\000\000\000\000\000\000\073\000\151\000\073\000\073\000\
\000\000\073\000\073\000\000\000\073\000\000\000\073\000\000\000\
\073\000\152\000\000\000\000\000\000\000\073\000\153\000\154\000\
\000\000\155\000\156\000\157\000\158\000\000\000\000\000\084\000\
\084\000\084\000\000\000\000\000\000\000\084\000\084\000\084\000\
\084\000\084\000\084\000\159\000\160\000\000\000\161\000\084\000\
\084\000\084\000\084\000\084\000\084\000\084\000\000\000\000\000\
\162\000\000\000\163\000\000\000\084\000\000\000\000\000\000\000\
\200\000\000\000\000\000\000\000\084\000\084\000\000\000\084\000\
\084\000\000\000\084\000\084\000\000\000\084\000\084\000\000\000\
\084\000\084\000\084\000\084\000\084\000\076\000\076\000\076\000\
\000\000\084\000\000\000\076\000\076\000\076\000\076\000\076\000\
\000\000\000\000\000\000\000\000\000\000\076\000\076\000\076\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\076\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\076\000\000\000\000\000\000\000\076\000\000\000\
\076\000\076\000\000\000\076\000\076\000\000\000\076\000\000\000\
\076\000\000\000\076\000\075\000\075\000\075\000\000\000\076\000\
\000\000\075\000\075\000\075\000\075\000\075\000\000\000\000\000\
\079\000\079\000\079\000\075\000\075\000\075\000\079\000\079\000\
\079\000\079\000\079\000\000\000\000\000\000\000\000\000\000\000\
\075\000\000\000\079\000\000\000\000\000\000\000\000\000\000\000\
\075\000\000\000\000\000\000\000\075\000\079\000\075\000\075\000\
\000\000\075\000\075\000\000\000\075\000\000\000\075\000\000\000\
\075\000\079\000\000\000\079\000\079\000\075\000\079\000\079\000\
\000\000\079\000\000\000\079\000\000\000\079\000\078\000\078\000\
\078\000\000\000\079\000\000\000\078\000\078\000\078\000\078\000\
\078\000\000\000\000\000\097\000\097\000\097\000\000\000\000\000\
\078\000\097\000\097\000\097\000\097\000\097\000\000\000\000\000\
\000\000\000\000\000\000\078\000\000\000\097\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\078\000\
\097\000\078\000\078\000\000\000\078\000\078\000\000\000\078\000\
\000\000\078\000\000\000\078\000\097\000\000\000\097\000\097\000\
\078\000\097\000\097\000\000\000\097\000\000\000\097\000\000\000\
\097\000\096\000\096\000\096\000\000\000\097\000\000\000\096\000\
\096\000\096\000\096\000\096\000\000\000\000\000\095\000\095\000\
\095\000\000\000\000\000\096\000\095\000\095\000\095\000\095\000\
\095\000\000\000\000\000\000\000\000\000\000\000\096\000\000\000\
\095\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\096\000\095\000\096\000\096\000\000\000\096\000\
\096\000\000\000\096\000\000\000\096\000\000\000\096\000\095\000\
\000\000\095\000\095\000\096\000\095\000\095\000\000\000\095\000\
\000\000\095\000\000\000\095\000\082\000\082\000\082\000\000\000\
\095\000\000\000\082\000\082\000\082\000\082\000\082\000\000\000\
\000\000\083\000\083\000\083\000\000\000\000\000\082\000\083\000\
\083\000\083\000\083\000\083\000\000\000\000\000\000\000\000\000\
\000\000\082\000\000\000\083\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\079\000\000\000\082\000\083\000\082\000\
\082\000\000\000\082\000\082\000\000\000\082\000\000\000\082\000\
\000\000\082\000\083\000\000\000\083\000\083\000\082\000\083\000\
\083\000\081\000\083\000\000\000\083\000\082\000\083\000\083\000\
\000\000\084\000\152\000\083\000\000\000\000\000\000\000\048\000\
\048\000\048\000\155\000\156\000\157\000\158\000\085\000\048\000\
\048\000\048\000\155\000\156\000\157\000\158\000\000\000\086\000\
\000\000\087\000\000\000\000\000\000\000\160\000\000\000\161\000\
\000\000\000\000\000\000\000\000\048\000\160\000\000\000\161\000\
\000\000\162\000\000\000\163\000\000\000\000\000\000\000\048\000\
\048\000\162\000\048\000\163\000\000\000\048\000\048\000\151\000\
\048\000\048\000\048\000\048\000\048\000\000\000\196\000\197\000\
\000\000\000\000\000\000\152\000\000\000\000\000\000\000\000\000\
\153\000\154\000\000\000\155\000\156\000\157\000\158\000\000\000\
\053\000\053\000\053\000\000\000\037\000\038\000\039\000\040\000\
\053\000\053\000\053\000\000\000\000\000\159\000\160\000\000\000\
\161\000\000\000\156\000\157\000\158\000\000\000\000\000\198\000\
\000\000\041\000\162\000\042\000\163\000\053\000\000\000\000\000\
\000\000\000\000\000\000\043\000\160\000\044\000\161\000\000\000\
\053\000\053\000\000\000\053\000\000\000\000\000\053\000\053\000\
\162\000\053\000\163\000\053\000\000\000\053\000\052\000\052\000\
\052\000\000\000\000\000\000\000\000\000\000\000\052\000\052\000\
\052\000\000\000\000\000\050\000\050\000\050\000\000\000\000\000\
\000\000\000\000\000\000\050\000\050\000\050\000\000\000\000\000\
\051\000\051\000\051\000\052\000\000\000\000\000\000\000\000\000\
\051\000\051\000\051\000\000\000\000\000\000\000\052\000\052\000\
\050\000\052\000\000\000\000\000\052\000\052\000\000\000\052\000\
\000\000\052\000\000\000\052\000\050\000\051\000\050\000\000\000\
\000\000\050\000\050\000\000\000\050\000\000\000\050\000\050\000\
\050\000\051\000\000\000\051\000\000\000\000\000\051\000\051\000\
\000\000\051\000\000\000\051\000\051\000\051\000\054\000\054\000\
\054\000\000\000\000\000\000\000\000\000\000\000\054\000\054\000\
\054\000\000\000\000\000\000\000\000\000\055\000\055\000\055\000\
\000\000\000\000\000\000\000\000\000\000\055\000\055\000\055\000\
\000\000\000\000\000\000\054\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\054\000\054\000\
\000\000\054\000\055\000\000\000\054\000\054\000\000\000\054\000\
\000\000\054\000\000\000\054\000\000\000\055\000\055\000\000\000\
\055\000\151\000\000\000\055\000\055\000\000\000\055\000\092\000\
\055\000\000\000\055\000\000\000\190\000\152\000\000\000\093\000\
\094\000\095\000\153\000\154\000\000\000\155\000\156\000\157\000\
\158\000\000\000\151\000\000\000\096\000\097\000\000\000\000\000\
\000\000\098\000\099\000\100\000\021\000\101\000\152\000\159\000\
\160\000\000\000\161\000\153\000\154\000\102\000\155\000\156\000\
\157\000\158\000\000\000\000\000\162\000\000\000\163\000\000\000\
\000\000\000\000\000\000\103\000\000\000\000\000\000\000\151\000\
\159\000\160\000\000\000\161\000\000\000\000\000\000\000\232\000\
\000\000\000\000\000\000\152\000\000\000\162\000\000\000\163\000\
\153\000\154\000\236\000\155\000\156\000\157\000\158\000\000\000\
\151\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\197\000\000\000\000\000\000\000\152\000\159\000\160\000\000\000\
\161\000\153\000\154\000\000\000\155\000\156\000\157\000\158\000\
\000\000\151\000\162\000\000\000\163\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\152\000\159\000\160\000\
\000\000\161\000\153\000\154\000\000\000\155\000\156\000\157\000\
\158\000\000\000\000\000\162\000\000\000\163\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\151\000\159\000\
\160\000\000\000\161\000\000\000\000\000\000\000\246\000\000\000\
\000\000\000\000\152\000\000\000\162\000\000\000\163\000\153\000\
\154\000\247\000\155\000\156\000\157\000\158\000\000\000\151\000\
\000\000\000\000\248\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\152\000\159\000\160\000\000\000\161\000\
\153\000\154\000\000\000\155\000\156\000\157\000\158\000\000\000\
\000\000\162\000\000\000\163\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\151\000\159\000\160\000\252\000\
\161\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\152\000\000\000\162\000\000\000\163\000\153\000\154\000\000\000\
\155\000\156\000\157\000\158\000\000\000\056\000\056\000\056\000\
\000\000\000\000\000\000\000\000\000\000\056\000\056\000\056\000\
\000\000\000\000\159\000\160\000\000\000\161\000\000\000\000\000\
\000\000\000\000\000\000\000\000\057\000\057\000\057\000\162\000\
\000\000\163\000\056\000\000\000\057\000\057\000\057\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\056\000\000\000\
\056\000\000\000\000\000\056\000\056\000\000\000\056\000\000\000\
\056\000\057\000\056\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\057\000\000\000\057\000\
\000\000\151\000\057\000\057\000\000\000\057\000\000\000\057\000\
\000\000\057\000\058\000\058\000\058\000\152\000\000\000\000\000\
\000\000\000\000\058\000\058\000\058\000\155\000\156\000\157\000\
\158\000\000\000\151\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\152\000\058\000\
\160\000\000\000\161\000\153\000\154\000\000\000\155\000\156\000\
\157\000\158\000\000\000\058\000\162\000\058\000\163\000\000\000\
\058\000\058\000\000\000\058\000\000\000\058\000\000\000\058\000\
\159\000\160\000\092\000\161\000\000\000\000\000\000\000\000\000\
\000\000\000\000\093\000\094\000\095\000\162\000\000\000\163\000\
\000\000\037\000\038\000\039\000\040\000\000\000\000\000\096\000\
\097\000\000\000\000\000\000\000\098\000\099\000\100\000\021\000\
\101\000\000\000\059\000\059\000\000\000\000\000\041\000\000\000\
\144\000\059\000\059\000\059\000\000\000\145\000\000\000\000\000\
\043\000\004\000\044\000\000\000\000\000\000\000\103\000\000\000\
\004\000\004\000\004\000\000\000\006\000\000\000\059\000\000\000\
\000\000\000\000\000\000\006\000\006\000\006\000\000\000\000\000\
\000\000\000\000\059\000\000\000\059\000\004\000\000\000\059\000\
\059\000\000\000\059\000\000\000\059\000\000\000\059\000\000\000\
\006\000\004\000\000\000\004\000\000\000\000\000\004\000\000\000\
\000\000\004\000\000\000\004\000\006\000\004\000\006\000\000\000\
\000\000\006\000\007\000\000\000\006\000\000\000\006\000\000\000\
\006\000\007\000\007\000\007\000\000\000\008\000\000\000\000\000\
\000\000\000\000\000\000\000\000\008\000\008\000\008\000\000\000\
\000\000\000\000\000\000\000\000\010\000\000\000\007\000\000\000\
\000\000\000\000\000\000\010\000\010\000\010\000\000\000\000\000\
\000\000\008\000\007\000\000\000\007\000\000\000\000\000\007\000\
\000\000\000\000\007\000\000\000\007\000\008\000\007\000\008\000\
\010\000\000\000\008\000\000\000\000\000\008\000\000\000\008\000\
\000\000\008\000\000\000\000\000\010\000\000\000\010\000\000\000\
\000\000\010\000\005\000\000\000\010\000\000\000\010\000\000\000\
\010\000\005\000\005\000\005\000\000\000\016\000\000\000\000\000\
\000\000\000\000\000\000\000\000\016\000\016\000\016\000\000\000\
\000\000\000\000\000\000\000\000\020\000\000\000\005\000\000\000\
\000\000\000\000\000\000\020\000\020\000\020\000\000\000\000\000\
\000\000\016\000\005\000\000\000\005\000\000\000\000\000\005\000\
\000\000\000\000\005\000\000\000\005\000\016\000\005\000\016\000\
\020\000\000\000\016\000\000\000\000\000\016\000\000\000\016\000\
\000\000\016\000\000\000\000\000\020\000\000\000\020\000\000\000\
\000\000\020\000\018\000\000\000\020\000\000\000\020\000\000\000\
\020\000\018\000\018\000\018\000\000\000\012\000\000\000\000\000\
\000\000\000\000\000\000\000\000\012\000\012\000\012\000\000\000\
\000\000\000\000\000\000\000\000\019\000\000\000\018\000\000\000\
\000\000\000\000\000\000\019\000\019\000\019\000\000\000\000\000\
\000\000\012\000\018\000\000\000\018\000\000\000\000\000\018\000\
\000\000\000\000\018\000\000\000\018\000\012\000\018\000\012\000\
\019\000\000\000\012\000\000\000\000\000\012\000\000\000\012\000\
\000\000\012\000\000\000\000\000\019\000\000\000\019\000\000\000\
\000\000\019\000\014\000\000\000\019\000\000\000\019\000\000\000\
\019\000\014\000\014\000\014\000\000\000\009\000\000\000\000\000\
\000\000\000\000\000\000\000\000\009\000\009\000\009\000\000\000\
\000\000\000\000\000\000\000\000\011\000\000\000\014\000\000\000\
\000\000\000\000\000\000\011\000\011\000\011\000\000\000\000\000\
\000\000\009\000\014\000\000\000\014\000\000\000\000\000\014\000\
\000\000\000\000\014\000\000\000\014\000\009\000\014\000\009\000\
\011\000\000\000\009\000\000\000\000\000\009\000\000\000\009\000\
\000\000\009\000\000\000\000\000\011\000\000\000\011\000\000\000\
\000\000\011\000\017\000\000\000\011\000\000\000\011\000\000\000\
\011\000\017\000\017\000\017\000\000\000\013\000\000\000\000\000\
\000\000\000\000\000\000\000\000\013\000\013\000\013\000\000\000\
\000\000\000\000\000\000\000\000\015\000\000\000\017\000\000\000\
\000\000\000\000\000\000\015\000\015\000\015\000\000\000\000\000\
\000\000\013\000\017\000\000\000\017\000\000\000\000\000\017\000\
\000\000\000\000\017\000\000\000\017\000\013\000\017\000\013\000\
\015\000\000\000\013\000\008\000\000\000\013\000\000\000\013\000\
\000\000\013\000\009\000\010\000\015\000\000\000\015\000\000\000\
\000\000\015\000\151\000\000\000\015\000\000\000\015\000\000\000\
\015\000\000\000\000\000\000\000\000\000\000\000\152\000\011\000\
\000\000\000\000\000\000\153\000\154\000\000\000\155\000\156\000\
\157\000\158\000\000\000\012\000\000\000\013\000\000\000\000\000\
\014\000\000\000\000\000\015\000\000\000\016\000\000\000\017\000\
\159\000\160\000\037\000\038\000\039\000\040\000\037\000\038\000\
\039\000\040\000\000\000\000\000\000\000\000\000\020\000\000\000\
\021\000\000\000\023\000\000\000\021\000\000\000\000\000\041\000\
\000\000\042\000\000\000\041\000\000\000\042\000\000\000\000\000\
\000\000\043\000\000\000\044\000\000\000\043\000\000\000\044\000"

let yycheck = "\008\000\
\009\000\010\000\011\000\012\000\013\000\014\000\009\000\002\001\
\017\000\033\001\002\001\035\001\001\000\022\000\023\000\085\000\
\002\001\026\000\027\000\028\000\029\000\030\000\077\000\032\000\
\033\000\034\000\002\001\033\001\030\001\035\001\004\001\033\001\
\035\001\035\001\008\001\008\001\045\000\092\000\047\000\006\001\
\046\001\033\001\045\000\035\001\099\000\100\000\043\001\052\001\
\015\001\054\001\013\001\048\001\061\000\062\000\049\001\110\000\
\111\000\127\000\113\000\114\000\033\001\116\000\035\001\049\001\
\134\000\135\000\033\001\122\000\035\001\036\001\096\000\056\001\
\081\000\049\001\057\001\101\000\102\000\044\001\133\000\248\000\
\035\001\107\000\049\001\252\000\093\000\033\001\095\000\035\001\
\097\000\098\000\093\000\058\001\095\000\012\001\097\000\098\000\
\151\000\152\000\153\000\154\000\155\000\156\000\157\000\158\000\
\159\000\160\000\161\000\162\000\163\000\008\001\013\001\166\000\
\167\000\013\001\123\000\024\001\000\000\049\001\144\000\174\000\
\123\000\176\000\008\001\055\000\049\001\049\001\058\000\182\000\
\060\000\008\001\008\001\040\001\033\001\142\000\035\001\006\001\
\191\000\192\000\193\000\142\000\195\000\007\001\197\000\052\001\
\015\001\054\001\078\000\033\001\013\001\035\001\082\000\221\000\
\049\001\049\001\033\001\033\001\035\001\035\001\002\001\049\001\
\004\001\027\001\033\001\029\001\035\001\036\001\049\001\033\001\
\049\001\035\001\008\001\037\001\013\001\044\001\013\001\049\001\
\013\001\013\001\233\000\013\001\235\000\236\000\013\001\238\000\
\050\001\009\001\118\000\058\001\120\000\008\001\245\000\002\001\
\247\000\059\001\054\001\061\001\001\001\002\001\003\001\004\001\
\132\000\006\001\042\001\008\001\009\001\010\001\011\001\012\001\
\013\001\017\001\015\001\001\001\039\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\013\001\230\000\013\001\027\001\
\041\001\041\001\031\001\230\000\033\001\041\001\035\001\036\001\
\013\001\008\001\039\001\040\001\049\001\042\001\043\001\044\001\
\045\001\046\001\026\001\048\001\049\001\052\001\051\001\052\001\
\053\001\054\001\055\001\183\000\047\001\058\001\027\001\060\001\
\013\001\040\001\001\001\002\001\003\001\004\001\012\001\006\001\
\196\000\008\001\009\001\010\001\011\001\012\001\013\001\002\001\
\015\001\012\001\009\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\049\001\013\001\013\001\013\001\049\001\012\001\
\031\001\012\001\033\001\019\000\035\001\036\001\047\000\123\000\
\039\001\040\001\197\000\042\001\043\001\044\001\045\001\046\001\
\255\255\048\001\049\001\255\255\051\001\052\001\053\001\054\001\
\055\001\255\255\255\255\058\001\255\255\060\001\001\001\002\001\
\003\001\004\001\255\255\006\001\255\255\008\001\009\001\010\001\
\011\001\012\001\013\001\255\255\015\001\255\255\255\255\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\255\255\
\255\255\255\255\255\255\255\255\031\001\255\255\033\001\255\255\
\035\001\036\001\255\255\255\255\039\001\040\001\255\255\042\001\
\043\001\044\001\045\001\046\001\255\255\048\001\049\001\255\255\
\051\001\052\001\053\001\054\001\055\001\255\255\255\255\058\001\
\255\255\060\001\001\001\002\001\003\001\004\001\255\255\006\001\
\255\255\008\001\009\001\010\001\011\001\012\001\013\001\255\255\
\015\001\255\255\255\255\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\255\255\255\255\255\255\255\255\255\255\255\255\
\031\001\255\255\033\001\255\255\035\001\036\001\255\255\255\255\
\039\001\040\001\255\255\042\001\043\001\044\001\045\001\046\001\
\255\255\048\001\049\001\255\255\051\001\052\001\053\001\054\001\
\055\001\255\255\255\255\058\001\255\255\060\001\001\001\002\001\
\003\001\004\001\255\255\255\255\255\255\008\001\009\001\010\001\
\011\001\012\001\013\001\255\255\255\255\255\255\255\255\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\026\000\
\027\000\028\000\029\000\030\000\031\001\255\255\255\255\034\000\
\255\255\255\255\255\255\255\255\039\001\040\001\255\255\042\001\
\043\001\255\255\045\001\046\001\255\255\048\001\049\001\255\255\
\051\001\052\001\053\001\054\001\055\001\001\001\002\001\003\001\
\004\001\060\001\061\000\062\000\008\001\009\001\010\001\011\001\
\012\001\013\001\255\255\255\255\255\255\255\255\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\255\255\255\255\255\255\
\255\255\255\255\255\255\031\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\039\001\040\001\255\255\042\001\043\001\
\255\255\045\001\046\001\255\255\048\001\049\001\255\255\051\001\
\052\001\053\001\054\001\055\001\001\001\002\001\003\001\004\001\
\060\001\255\255\255\255\008\001\009\001\010\001\011\001\012\001\
\013\001\255\255\255\255\255\255\255\255\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\255\255\255\255\255\255\255\255\
\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\040\001\255\255\042\001\043\001\255\255\
\045\001\046\001\255\255\048\001\049\001\255\255\051\001\052\001\
\053\001\054\001\055\001\001\001\002\001\003\001\004\001\060\001\
\255\255\255\255\008\001\009\001\010\001\011\001\012\001\013\001\
\255\255\255\255\255\255\255\255\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\255\255\255\255\255\255\255\255\
\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\039\001\255\255\255\255\042\001\043\001\255\255\045\001\
\046\001\255\255\048\001\049\001\255\255\051\001\052\001\053\001\
\054\001\055\001\001\001\002\001\003\001\004\001\060\001\255\255\
\255\255\008\001\009\001\010\001\011\001\012\001\013\001\255\255\
\255\255\255\255\255\255\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\255\255\255\255\255\255\255\255\255\255\255\255\
\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\039\001\255\255\255\255\042\001\043\001\255\255\045\001\046\001\
\255\255\048\001\049\001\255\255\051\001\052\001\053\001\054\001\
\055\001\001\001\002\001\003\001\004\001\060\001\255\255\255\255\
\008\001\009\001\010\001\011\001\012\001\013\001\255\255\255\255\
\255\255\255\255\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\255\255\255\255\255\255\255\255\255\255\255\255\031\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\039\001\
\255\255\255\255\042\001\043\001\255\255\045\001\046\001\255\255\
\048\001\049\001\255\255\051\001\052\001\053\001\054\001\055\001\
\001\001\002\001\003\001\004\001\060\001\255\255\255\255\008\001\
\009\001\010\001\011\001\012\001\013\001\255\255\255\255\255\255\
\255\255\018\001\019\001\020\001\021\001\022\001\023\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\031\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\039\001\255\255\
\255\255\042\001\043\001\255\255\045\001\046\001\255\255\048\001\
\049\001\255\255\051\001\255\255\053\001\255\255\055\001\001\001\
\002\001\003\001\004\001\060\001\255\255\255\255\008\001\009\001\
\010\001\011\001\012\001\013\001\255\255\255\255\255\255\255\255\
\018\001\019\001\020\001\021\001\022\001\023\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\031\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\039\001\255\255\255\255\
\042\001\043\001\255\255\045\001\046\001\255\255\048\001\049\001\
\255\255\051\001\255\255\053\001\255\255\055\001\001\001\002\001\
\003\001\004\001\060\001\255\255\255\255\008\001\009\001\010\001\
\011\001\012\001\013\001\255\255\255\255\255\255\255\255\018\001\
\019\001\020\001\021\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\031\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\039\001\255\255\255\255\255\255\
\043\001\255\255\045\001\046\001\255\255\048\001\049\001\255\255\
\051\001\255\255\053\001\255\255\055\001\001\001\002\001\003\001\
\004\001\060\001\255\255\255\255\008\001\009\001\010\001\011\001\
\012\001\013\001\255\255\255\255\255\255\255\255\018\001\019\001\
\020\001\021\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\031\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\039\001\255\255\255\255\255\255\043\001\
\255\255\045\001\046\001\255\255\048\001\049\001\255\255\051\001\
\255\255\053\001\255\255\055\001\001\001\002\001\003\001\004\001\
\060\001\255\255\255\255\008\001\009\001\010\001\011\001\012\001\
\255\255\255\255\255\255\255\255\255\255\018\001\019\001\020\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\039\001\255\255\255\255\255\255\043\001\255\255\
\045\001\046\001\255\255\048\001\049\001\255\255\051\001\255\255\
\053\001\255\255\055\001\001\001\002\001\003\001\004\001\060\001\
\255\255\255\255\008\001\009\001\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\018\001\019\001\020\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\031\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\039\001\255\255\255\255\255\255\043\001\255\255\045\001\
\046\001\255\255\048\001\049\001\255\255\051\001\255\255\053\001\
\255\255\055\001\001\001\002\001\003\001\004\001\060\001\255\255\
\255\255\008\001\009\001\010\001\011\001\012\001\255\255\255\255\
\255\255\255\255\255\255\018\001\019\001\020\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\031\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\039\001\255\255\255\255\255\255\043\001\001\001\045\001\046\001\
\255\255\048\001\049\001\255\255\051\001\255\255\053\001\255\255\
\055\001\013\001\255\255\255\255\255\255\060\001\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\255\255\255\255\002\001\
\003\001\004\001\255\255\255\255\255\255\008\001\009\001\010\001\
\011\001\012\001\013\001\039\001\040\001\255\255\042\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\255\255\
\052\001\255\255\054\001\255\255\031\001\255\255\255\255\255\255\
\060\001\255\255\255\255\255\255\039\001\040\001\255\255\042\001\
\043\001\255\255\045\001\046\001\255\255\048\001\049\001\255\255\
\051\001\052\001\053\001\054\001\055\001\002\001\003\001\004\001\
\255\255\060\001\255\255\008\001\009\001\010\001\011\001\012\001\
\255\255\255\255\255\255\255\255\255\255\018\001\019\001\020\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\031\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\039\001\255\255\255\255\255\255\043\001\255\255\
\045\001\046\001\255\255\048\001\049\001\255\255\051\001\255\255\
\053\001\255\255\055\001\002\001\003\001\004\001\255\255\060\001\
\255\255\008\001\009\001\010\001\011\001\012\001\255\255\255\255\
\002\001\003\001\004\001\018\001\019\001\020\001\008\001\009\001\
\010\001\011\001\012\001\255\255\255\255\255\255\255\255\255\255\
\031\001\255\255\020\001\255\255\255\255\255\255\255\255\255\255\
\039\001\255\255\255\255\255\255\043\001\031\001\045\001\046\001\
\255\255\048\001\049\001\255\255\051\001\255\255\053\001\255\255\
\055\001\043\001\255\255\045\001\046\001\060\001\048\001\049\001\
\255\255\051\001\255\255\053\001\255\255\055\001\002\001\003\001\
\004\001\255\255\060\001\255\255\008\001\009\001\010\001\011\001\
\012\001\255\255\255\255\002\001\003\001\004\001\255\255\255\255\
\020\001\008\001\009\001\010\001\011\001\012\001\255\255\255\255\
\255\255\255\255\255\255\031\001\255\255\020\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\043\001\
\031\001\045\001\046\001\255\255\048\001\049\001\255\255\051\001\
\255\255\053\001\255\255\055\001\043\001\255\255\045\001\046\001\
\060\001\048\001\049\001\255\255\051\001\255\255\053\001\255\255\
\055\001\002\001\003\001\004\001\255\255\060\001\255\255\008\001\
\009\001\010\001\011\001\012\001\255\255\255\255\002\001\003\001\
\004\001\255\255\255\255\020\001\008\001\009\001\010\001\011\001\
\012\001\255\255\255\255\255\255\255\255\255\255\031\001\255\255\
\020\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\043\001\031\001\045\001\046\001\255\255\048\001\
\049\001\255\255\051\001\255\255\053\001\255\255\055\001\043\001\
\255\255\045\001\046\001\060\001\048\001\049\001\255\255\051\001\
\255\255\053\001\255\255\055\001\002\001\003\001\004\001\255\255\
\060\001\255\255\008\001\009\001\010\001\011\001\012\001\255\255\
\255\255\002\001\003\001\004\001\255\255\255\255\020\001\008\001\
\009\001\010\001\011\001\012\001\255\255\255\255\255\255\255\255\
\255\255\031\001\255\255\020\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\007\001\255\255\043\001\031\001\045\001\
\046\001\255\255\048\001\049\001\255\255\051\001\255\255\053\001\
\255\255\055\001\043\001\255\255\045\001\046\001\060\001\048\001\
\049\001\029\001\051\001\255\255\053\001\033\001\055\001\035\001\
\255\255\037\001\013\001\060\001\255\255\255\255\255\255\002\001\
\003\001\004\001\021\001\022\001\023\001\024\001\050\001\010\001\
\011\001\012\001\021\001\022\001\023\001\024\001\255\255\059\001\
\255\255\061\001\255\255\255\255\255\255\040\001\255\255\042\001\
\255\255\255\255\255\255\255\255\031\001\040\001\255\255\042\001\
\255\255\052\001\255\255\054\001\255\255\255\255\255\255\042\001\
\043\001\052\001\045\001\054\001\255\255\048\001\049\001\001\001\
\051\001\052\001\053\001\054\001\055\001\255\255\008\001\009\001\
\255\255\255\255\255\255\013\001\255\255\255\255\255\255\255\255\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\255\255\
\002\001\003\001\004\001\255\255\021\001\022\001\023\001\024\001\
\010\001\011\001\012\001\255\255\255\255\039\001\040\001\255\255\
\042\001\255\255\022\001\023\001\024\001\255\255\255\255\049\001\
\255\255\042\001\052\001\044\001\054\001\031\001\255\255\255\255\
\255\255\255\255\255\255\052\001\040\001\054\001\042\001\255\255\
\042\001\043\001\255\255\045\001\255\255\255\255\048\001\049\001\
\052\001\051\001\054\001\053\001\255\255\055\001\002\001\003\001\
\004\001\255\255\255\255\255\255\255\255\255\255\010\001\011\001\
\012\001\255\255\255\255\002\001\003\001\004\001\255\255\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\002\001\003\001\004\001\031\001\255\255\255\255\255\255\255\255\
\010\001\011\001\012\001\255\255\255\255\255\255\042\001\043\001\
\031\001\045\001\255\255\255\255\048\001\049\001\255\255\051\001\
\255\255\053\001\255\255\055\001\043\001\031\001\045\001\255\255\
\255\255\048\001\049\001\255\255\051\001\255\255\053\001\054\001\
\055\001\043\001\255\255\045\001\255\255\255\255\048\001\049\001\
\255\255\051\001\255\255\053\001\054\001\055\001\002\001\003\001\
\004\001\255\255\255\255\255\255\255\255\255\255\010\001\011\001\
\012\001\255\255\255\255\255\255\255\255\002\001\003\001\004\001\
\255\255\255\255\255\255\255\255\255\255\010\001\011\001\012\001\
\255\255\255\255\255\255\031\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\042\001\043\001\
\255\255\045\001\031\001\255\255\048\001\049\001\255\255\051\001\
\255\255\053\001\255\255\055\001\255\255\042\001\043\001\255\255\
\045\001\001\001\255\255\048\001\049\001\255\255\051\001\006\001\
\053\001\255\255\055\001\255\255\012\001\013\001\255\255\014\001\
\015\001\016\001\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\255\255\001\001\255\255\027\001\028\001\255\255\255\255\
\255\255\032\001\033\001\034\001\035\001\036\001\013\001\039\001\
\040\001\255\255\042\001\018\001\019\001\044\001\021\001\022\001\
\023\001\024\001\255\255\255\255\052\001\255\255\054\001\255\255\
\255\255\255\255\255\255\058\001\255\255\255\255\255\255\001\001\
\039\001\040\001\255\255\042\001\255\255\255\255\255\255\046\001\
\255\255\255\255\255\255\013\001\255\255\052\001\255\255\054\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\255\255\
\001\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\009\001\255\255\255\255\255\255\013\001\039\001\040\001\255\255\
\042\001\018\001\019\001\255\255\021\001\022\001\023\001\024\001\
\255\255\001\001\052\001\255\255\054\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\013\001\039\001\040\001\
\255\255\042\001\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\255\255\255\255\052\001\255\255\054\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\001\001\039\001\
\040\001\255\255\042\001\255\255\255\255\255\255\046\001\255\255\
\255\255\255\255\013\001\255\255\052\001\255\255\054\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\001\001\
\255\255\255\255\004\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\039\001\040\001\255\255\042\001\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\255\255\
\255\255\052\001\255\255\054\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\039\001\040\001\004\001\
\042\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\013\001\255\255\052\001\255\255\054\001\018\001\019\001\255\255\
\021\001\022\001\023\001\024\001\255\255\002\001\003\001\004\001\
\255\255\255\255\255\255\255\255\255\255\010\001\011\001\012\001\
\255\255\255\255\039\001\040\001\255\255\042\001\255\255\255\255\
\255\255\255\255\255\255\255\255\002\001\003\001\004\001\052\001\
\255\255\054\001\031\001\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\043\001\255\255\
\045\001\255\255\255\255\048\001\049\001\255\255\051\001\255\255\
\053\001\031\001\055\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\043\001\255\255\045\001\
\255\255\001\001\048\001\049\001\255\255\051\001\255\255\053\001\
\255\255\055\001\002\001\003\001\004\001\013\001\255\255\255\255\
\255\255\255\255\010\001\011\001\012\001\021\001\022\001\023\001\
\024\001\255\255\001\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\013\001\031\001\
\040\001\255\255\042\001\018\001\019\001\255\255\021\001\022\001\
\023\001\024\001\255\255\043\001\052\001\045\001\054\001\255\255\
\048\001\049\001\255\255\051\001\255\255\053\001\255\255\055\001\
\039\001\040\001\006\001\042\001\255\255\255\255\255\255\255\255\
\255\255\255\255\014\001\015\001\016\001\052\001\255\255\054\001\
\255\255\021\001\022\001\023\001\024\001\255\255\255\255\027\001\
\028\001\255\255\255\255\255\255\032\001\033\001\034\001\035\001\
\036\001\255\255\003\001\004\001\255\255\255\255\042\001\255\255\
\044\001\010\001\011\001\012\001\255\255\049\001\255\255\255\255\
\052\001\003\001\054\001\255\255\255\255\255\255\058\001\255\255\
\010\001\011\001\012\001\255\255\003\001\255\255\031\001\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\255\255\043\001\255\255\045\001\031\001\255\255\048\001\
\049\001\255\255\051\001\255\255\053\001\255\255\055\001\255\255\
\031\001\043\001\255\255\045\001\255\255\255\255\048\001\255\255\
\255\255\051\001\255\255\053\001\043\001\055\001\045\001\255\255\
\255\255\048\001\003\001\255\255\051\001\255\255\053\001\255\255\
\055\001\010\001\011\001\012\001\255\255\003\001\255\255\255\255\
\255\255\255\255\255\255\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\003\001\255\255\031\001\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\031\001\043\001\255\255\045\001\255\255\255\255\048\001\
\255\255\255\255\051\001\255\255\053\001\043\001\055\001\045\001\
\031\001\255\255\048\001\255\255\255\255\051\001\255\255\053\001\
\255\255\055\001\255\255\255\255\043\001\255\255\045\001\255\255\
\255\255\048\001\003\001\255\255\051\001\255\255\053\001\255\255\
\055\001\010\001\011\001\012\001\255\255\003\001\255\255\255\255\
\255\255\255\255\255\255\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\003\001\255\255\031\001\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\031\001\043\001\255\255\045\001\255\255\255\255\048\001\
\255\255\255\255\051\001\255\255\053\001\043\001\055\001\045\001\
\031\001\255\255\048\001\255\255\255\255\051\001\255\255\053\001\
\255\255\055\001\255\255\255\255\043\001\255\255\045\001\255\255\
\255\255\048\001\003\001\255\255\051\001\255\255\053\001\255\255\
\055\001\010\001\011\001\012\001\255\255\003\001\255\255\255\255\
\255\255\255\255\255\255\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\003\001\255\255\031\001\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\031\001\043\001\255\255\045\001\255\255\255\255\048\001\
\255\255\255\255\051\001\255\255\053\001\043\001\055\001\045\001\
\031\001\255\255\048\001\255\255\255\255\051\001\255\255\053\001\
\255\255\055\001\255\255\255\255\043\001\255\255\045\001\255\255\
\255\255\048\001\003\001\255\255\051\001\255\255\053\001\255\255\
\055\001\010\001\011\001\012\001\255\255\003\001\255\255\255\255\
\255\255\255\255\255\255\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\003\001\255\255\031\001\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\031\001\043\001\255\255\045\001\255\255\255\255\048\001\
\255\255\255\255\051\001\255\255\053\001\043\001\055\001\045\001\
\031\001\255\255\048\001\255\255\255\255\051\001\255\255\053\001\
\255\255\055\001\255\255\255\255\043\001\255\255\045\001\255\255\
\255\255\048\001\003\001\255\255\051\001\255\255\053\001\255\255\
\055\001\010\001\011\001\012\001\255\255\003\001\255\255\255\255\
\255\255\255\255\255\255\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\255\255\255\255\003\001\255\255\031\001\255\255\
\255\255\255\255\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\031\001\043\001\255\255\045\001\255\255\255\255\048\001\
\255\255\255\255\051\001\255\255\053\001\043\001\055\001\045\001\
\031\001\255\255\048\001\003\001\255\255\051\001\255\255\053\001\
\255\255\055\001\010\001\011\001\043\001\255\255\045\001\255\255\
\255\255\048\001\001\001\255\255\051\001\255\255\053\001\255\255\
\055\001\255\255\255\255\255\255\255\255\255\255\013\001\031\001\
\255\255\255\255\255\255\018\001\019\001\255\255\021\001\022\001\
\023\001\024\001\255\255\043\001\255\255\045\001\255\255\255\255\
\048\001\255\255\255\255\051\001\255\255\053\001\255\255\055\001\
\039\001\040\001\021\001\022\001\023\001\024\001\021\001\022\001\
\023\001\024\001\255\255\255\255\255\255\255\255\033\001\255\255\
\035\001\255\255\033\001\255\255\035\001\255\255\255\255\042\001\
\255\255\044\001\255\255\042\001\255\255\044\001\255\255\255\255\
\255\255\052\001\255\255\054\001\255\255\052\001\255\255\054\001"

let yynames_const = "\
  AND\000\
  ARROW\000\
  AXIOM\000\
  BAR\000\
  BACKQUOTE\000\
  BEGIN\000\
  BOOL\000\
  COLON\000\
  COMMA\000\
  CONSTANT\000\
  COROLLARY\000\
  END\000\
  EOF\000\
  EQUAL\000\
  EXISTS\000\
  FALSE\000\
  FORALL\000\
  HASH\000\
  IFF\000\
  IMPLY\000\
  IN\000\
  LAMBDA\000\
  LBRACE\000\
  LBRACK\000\
  LEMMA\000\
  LET\000\
  LPAREN\000\
  MATCH\000\
  NOT\000\
  ONE\000\
  ON\000\
  OR\000\
  PERCENT\000\
  PERIOD\000\
  PLUS\000\
  PREDICATE\000\
  PROPOSITION\000\
  RBRACE\000\
  RBRACK\000\
  RELATION\000\
  RPAREN\000\
  RZ\000\
  SET\000\
  SLASH\000\
  STABLE\000\
  STAR\000\
  THEOREM\000\
  THEORY\000\
  THY\000\
  TRUE\000\
  TWO\000\
  WITH\000\
  ZERO\000\
  "

let yynames_block = "\
  INFIXOP0\000\
  INFIXOP1\000\
  INFIXOP2\000\
  INFIXOP3\000\
  INFIXOP4\000\
  INTEGER\000\
  LABEL\000\
  NAME\000\
  PREFIXOP\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun parser_env ->
    let _2 = (peek_val parser_env 5 : string) in
    let _5 = (peek_val parser_env 2 : 'theory_body) in
    Obj.repr(
# 113 "parser.mly"
                                              ( {t_name = _2; t_body = _5} )
# 1048 "parser.ml"
               : Syntax.theory))
; (fun parser_env ->
    Obj.repr(
# 116 "parser.mly"
                                ( [] )
# 1054 "parser.ml"
               : 'theory_body))
; (fun parser_env ->
    let _1 = (peek_val parser_env 1 : 'theory_element) in
    let _2 = (peek_val parser_env 0 : 'theory_body) in
    Obj.repr(
# 117 "parser.mly"
                                      ( _1 :: _2 )
# 1062 "parser.ml"
               : 'theory_body))
; (fun parser_env ->
    let _2 = (peek_val parser_env 0 : string) in
    Obj.repr(
# 120 "parser.mly"
                 ( Set _2 )
# 1069 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : string) in
    let _4 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 121 "parser.mly"
                        ( Let_set (_2, _4) )
# 1077 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name) in
    let _4 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 122 "parser.mly"
                            ( Value (_2, _4) )
# 1085 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name_typed) in
    let _4 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 123 "parser.mly"
                                   ( Let_term (_2, _4) )
# 1093 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name) in
    let _4 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 124 "parser.mly"
                                ( Predicate (_2, _4) )
# 1101 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _3 = (peek_val parser_env 2 : 'name) in
    let _5 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 125 "parser.mly"
                                       ( StPredicate (_3, _5) )
# 1109 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name) in
    let _4 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 126 "parser.mly"
                                ( Predicate (_2, _4) )
# 1117 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _3 = (peek_val parser_env 2 : 'name) in
    let _5 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 127 "parser.mly"
                                       ( StPredicate (_3, _5) )
# 1125 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 128 "parser.mly"
                                   ( Let_predicate (_2, _3, _5) )
# 1134 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _3 = (peek_val parser_env 3 : 'name) in
    let _4 = (peek_val parser_env 2 : 'args) in
    let _6 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 129 "parser.mly"
                                          ( Let_stpredicate (_3, _4, _6) )
# 1143 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 130 "parser.mly"
                                  ( Let_predicate (_2, _3, _5) )
# 1152 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _3 = (peek_val parser_env 3 : 'name) in
    let _4 = (peek_val parser_env 2 : 'args) in
    let _6 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 131 "parser.mly"
                                         ( Let_stpredicate (_3, _4, _6) )
# 1161 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 132 "parser.mly"
                                 ( Sentence (Axiom, _2, _3, _5) )
# 1170 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 133 "parser.mly"
                                 ( Sentence (Theorem, _2, _3, _5) )
# 1179 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 134 "parser.mly"
                                     ( Sentence (Lemma, _2, _3, _5) )
# 1188 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 135 "parser.mly"
                                     ( Sentence (Proposition, _2, _3, _5) )
# 1197 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _3 = (peek_val parser_env 2 : 'args) in
    let _5 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 136 "parser.mly"
                                     ( Sentence (Corollary, _2, _3, _5) )
# 1206 "parser.ml"
               : 'theory_element))
; (fun parser_env ->
    Obj.repr(
# 139 "parser.mly"
                                ( [] )
# 1212 "parser.ml"
               : 'args))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'args_curried) in
    Obj.repr(
# 140 "parser.mly"
                  ( _1 )
# 1219 "parser.ml"
               : 'args))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : 'arg_list) in
    Obj.repr(
# 141 "parser.mly"
                           ( _2 )
# 1226 "parser.ml"
               : 'args))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'name_typed) in
    Obj.repr(
# 144 "parser.mly"
                                ( [_1] )
# 1233 "parser.ml"
               : 'args_curried))
; (fun parser_env ->
    let _1 = (peek_val parser_env 1 : 'name_typed) in
    let _2 = (peek_val parser_env 0 : 'args_curried) in
    Obj.repr(
# 145 "parser.mly"
                                ( _1 :: _2 )
# 1241 "parser.ml"
               : 'args_curried))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'name_typed) in
    let _3 = (peek_val parser_env 0 : 'name_typed) in
    Obj.repr(
# 148 "parser.mly"
                                ( [_1; _3] )
# 1249 "parser.ml"
               : 'arg_list))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'name_typed) in
    let _3 = (peek_val parser_env 0 : 'arg_list) in
    Obj.repr(
# 149 "parser.mly"
                              ( _1 :: _3 )
# 1257 "parser.ml"
               : 'arg_list))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : string) in
    Obj.repr(
# 152 "parser.mly"
                                  ( (_1, Word) )
# 1264 "parser.ml"
               : 'name))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : string) in
    Obj.repr(
# 153 "parser.mly"
                                  ( (_2, Prefix) )
# 1271 "parser.ml"
               : 'name))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : string) in
    Obj.repr(
# 154 "parser.mly"
                                  ( (_2, Infix0) )
# 1278 "parser.ml"
               : 'name))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : string) in
    Obj.repr(
# 155 "parser.mly"
                                  ( (_2, Infix1) )
# 1285 "parser.ml"
               : 'name))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : string) in
    Obj.repr(
# 156 "parser.mly"
                                  ( (_2, Infix2) )
# 1292 "parser.ml"
               : 'name))
; (fun parser_env ->
    Obj.repr(
# 157 "parser.mly"
                                  ( ("+", Infix2) )
# 1298 "parser.ml"
               : 'name))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : string) in
    Obj.repr(
# 158 "parser.mly"
                                  ( (_2, Infix3) )
# 1305 "parser.ml"
               : 'name))
; (fun parser_env ->
    Obj.repr(
# 159 "parser.mly"
                                  ( ("*", Infix3) )
# 1311 "parser.ml"
               : 'name))
; (fun parser_env ->
    Obj.repr(
# 160 "parser.mly"
                                  ( ("/", Infix3) )
# 1317 "parser.ml"
               : 'name))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'name) in
    Obj.repr(
# 163 "parser.mly"
                                 ( (_1, None) )
# 1324 "parser.ml"
               : 'name_typed))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _4 = (peek_val parser_env 1 : 'set) in
    Obj.repr(
# 164 "parser.mly"
                                 ( (_2, Some _4) )
# 1332 "parser.ml"
               : 'name_typed))
; (fun parser_env ->
    Obj.repr(
# 167 "parser.mly"
            ( Empty )
# 1338 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    Obj.repr(
# 168 "parser.mly"
                   ( Empty )
# 1344 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    Obj.repr(
# 169 "parser.mly"
           ( Unit )
# 1350 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    Obj.repr(
# 170 "parser.mly"
                                ( Bool )
# 1356 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    Obj.repr(
# 171 "parser.mly"
                                ( Bool )
# 1362 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : string) in
    Obj.repr(
# 172 "parser.mly"
                                ( Set_name _1 )
# 1369 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : 'set) in
    Obj.repr(
# 173 "parser.mly"
                                ( _2 )
# 1376 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'name) in
    let _4 = (peek_val parser_env 1 : 'term) in
    Obj.repr(
# 174 "parser.mly"
                                ( Subset ((_2, None), _4) )
# 1384 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _2 = (peek_val parser_env 5 : 'name) in
    let _4 = (peek_val parser_env 3 : 'set) in
    let _6 = (peek_val parser_env 1 : 'term) in
    Obj.repr(
# 175 "parser.mly"
                                          ( Subset ((_2, Some _4), _6) )
# 1393 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'simple_set) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 176 "parser.mly"
                                ( Quotient (_1, _3) )
# 1401 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _2 = (peek_val parser_env 0 : 'simple_set) in
    Obj.repr(
# 177 "parser.mly"
                                ( RZ _2 )
# 1408 "parser.ml"
               : 'simple_set))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'simple_set) in
    let _3 = (peek_val parser_env 0 : 'simple_set) in
    Obj.repr(
# 180 "parser.mly"
                                      ( [_1; _3] )
# 1416 "parser.ml"
               : 'product))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'product) in
    let _3 = (peek_val parser_env 0 : 'simple_set) in
    Obj.repr(
# 181 "parser.mly"
                                      ( _1 @ [_3] )
# 1424 "parser.ml"
               : 'product))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : string) in
    let _3 = (peek_val parser_env 0 : 'simple_set) in
    Obj.repr(
# 184 "parser.mly"
                                       ( [(_1, Some _3)] )
# 1432 "parser.ml"
               : 'sum))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : string) in
    Obj.repr(
# 185 "parser.mly"
                                       ( [(_1, None)] )
# 1439 "parser.ml"
               : 'sum))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'sum) in
    let _3 = (peek_val parser_env 0 : string) in
    Obj.repr(
# 186 "parser.mly"
                                       ( _1 @ [(_3, None)] )
# 1447 "parser.ml"
               : 'sum))
; (fun parser_env ->
    let _1 = (peek_val parser_env 4 : 'sum) in
    let _3 = (peek_val parser_env 2 : string) in
    let _5 = (peek_val parser_env 0 : 'simple_set) in
    Obj.repr(
# 187 "parser.mly"
                                       ( _1 @ [(_3, Some _5)] )
# 1456 "parser.ml"
               : 'sum))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'simple_set) in
    Obj.repr(
# 190 "parser.mly"
                                ( _1 )
# 1463 "parser.ml"
               : 'set))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'product) in
    Obj.repr(
# 191 "parser.mly"
                                ( Product _1 )
# 1470 "parser.ml"
               : 'set))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'sum) in
    Obj.repr(
# 192 "parser.mly"
                                ( Sum _1 )
# 1477 "parser.ml"
               : 'set))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'set) in
    let _3 = (peek_val parser_env 0 : 'set) in
    Obj.repr(
# 193 "parser.mly"
                                ( Exp (_1, _3) )
# 1485 "parser.ml"
               : 'set))
; (fun parser_env ->
    Obj.repr(
# 196 "parser.mly"
                                ( True )
# 1491 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    Obj.repr(
# 197 "parser.mly"
                                ( False )
# 1497 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'name) in
    Obj.repr(
# 198 "parser.mly"
                                ( Var _1 )
# 1504 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'term) in
    let _4 = (peek_val parser_env 1 : 'set) in
    Obj.repr(
# 199 "parser.mly"
                                 ( Constraint (_2, _4) )
# 1512 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    Obj.repr(
# 200 "parser.mly"
                                ( Star )
# 1518 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : 'term_seq) in
    Obj.repr(
# 201 "parser.mly"
                                ( Tuple _2 )
# 1525 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : 'term) in
    Obj.repr(
# 202 "parser.mly"
                                ( _2 )
# 1532 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 1 : 'term) in
    Obj.repr(
# 203 "parser.mly"
                                ( _2 )
# 1539 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'simple_term) in
    let _3 = (peek_val parser_env 0 : int) in
    Obj.repr(
# 204 "parser.mly"
                                ( Proj (_3, _1) )
# 1547 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 1 : string) in
    let _2 = (peek_val parser_env 0 : 'simple_term) in
    Obj.repr(
# 205 "parser.mly"
                                ( App (Var (_1, Prefix), _2) )
# 1555 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 0 : 'simple_term) in
    Obj.repr(
# 206 "parser.mly"
                                ( Not _2 )
# 1562 "parser.ml"
               : 'simple_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'simple_term) in
    Obj.repr(
# 209 "parser.mly"
                                 ( _1 )
# 1569 "parser.ml"
               : 'apply_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 1 : 'apply_term) in
    let _2 = (peek_val parser_env 0 : 'simple_term) in
    Obj.repr(
# 210 "parser.mly"
                                 ( App (_1, _2) )
# 1577 "parser.ml"
               : 'apply_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'and_term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 213 "parser.mly"
                                ( _1 @ [_3] )
# 1585 "parser.ml"
               : 'and_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 214 "parser.mly"
                                ( [_1; _3] )
# 1593 "parser.ml"
               : 'and_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'or_term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 217 "parser.mly"
                               ( _1 @ [_3] )
# 1601 "parser.ml"
               : 'or_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 218 "parser.mly"
                               ( [_1; _3] )
# 1609 "parser.ml"
               : 'or_term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'apply_term) in
    Obj.repr(
# 221 "parser.mly"
                                ( _1 )
# 1616 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 222 "parser.mly"
                                ( Imply (_1, _3) )
# 1624 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 223 "parser.mly"
                                ( Iff (_1, _3) )
# 1632 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 1 : string) in
    let _2 = (peek_val parser_env 0 : 'simple_term) in
    Obj.repr(
# 224 "parser.mly"
                                ( Inj (_1, _2) )
# 1640 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 225 "parser.mly"
                                ( Equal (None, _1, _3) )
# 1648 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 4 : 'name_typed) in
    let _4 = (peek_val parser_env 2 : 'term) in
    let _6 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 226 "parser.mly"
                                      ( Let (_2, _4, _6) )
# 1657 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _3 = (peek_val parser_env 5 : 'name_typed) in
    let _6 = (peek_val parser_env 2 : 'term) in
    let _8 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 227 "parser.mly"
                                                    ( Choose (_3, _6, _8) )
# 1666 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'and_term) in
    Obj.repr(
# 228 "parser.mly"
                                ( And _1 )
# 1673 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 0 : 'or_term) in
    Obj.repr(
# 229 "parser.mly"
                                ( Or _1 )
# 1680 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _2 = (peek_val parser_env 1 : string) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 230 "parser.mly"
                                ( App (App (Var (_2, Infix0), _1), _3) )
# 1689 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _2 = (peek_val parser_env 1 : string) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 231 "parser.mly"
                                ( App (App (Var (_2, Infix1), _1), _3) )
# 1698 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _2 = (peek_val parser_env 1 : string) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 232 "parser.mly"
                                ( App (App (Var (_2, Infix2), _1), _3) )
# 1707 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 233 "parser.mly"
                                ( App (App (Var ("+", Infix2), _1), _3) )
# 1715 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _2 = (peek_val parser_env 1 : string) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 234 "parser.mly"
                                ( App (App (Var (_2, Infix3), _1), _3) )
# 1724 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 235 "parser.mly"
                                ( App (App (Var ("*", Infix3), _1), _3) )
# 1732 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 236 "parser.mly"
                                ( App (App (Var ("/", Infix3), _1), _3) )
# 1740 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 237 "parser.mly"
                                ( Quot (_1, _3) )
# 1748 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 3 : 'term) in
    let _4 = (peek_val parser_env 1 : 'cases) in
    Obj.repr(
# 238 "parser.mly"
                                ( Case (_2, _4) )
# 1756 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name_typed) in
    let _4 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 239 "parser.mly"
                                  ( Lambda (_2, _4) )
# 1764 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name_typed) in
    let _4 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 240 "parser.mly"
                                  ( Forall (_2, _4) )
# 1772 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _2 = (peek_val parser_env 2 : 'name_typed) in
    let _4 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 241 "parser.mly"
                                  ( Exists (_2, _4) )
# 1780 "parser.ml"
               : 'term))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 244 "parser.mly"
                                ( [_1; _3] )
# 1788 "parser.ml"
               : 'term_seq))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : 'term) in
    let _3 = (peek_val parser_env 0 : 'term_seq) in
    Obj.repr(
# 245 "parser.mly"
                                ( _1 :: _3 )
# 1796 "parser.ml"
               : 'term_seq))
; (fun parser_env ->
    let _1 = (peek_val parser_env 3 : string) in
    let _2 = (peek_val parser_env 2 : 'name_typed) in
    let _4 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 248 "parser.mly"
                                           ( [_1, Some _2, _4] )
# 1805 "parser.ml"
               : 'cases))
; (fun parser_env ->
    let _1 = (peek_val parser_env 2 : string) in
    let _3 = (peek_val parser_env 0 : 'term) in
    Obj.repr(
# 249 "parser.mly"
                                           ( [_1, None, _3] )
# 1813 "parser.ml"
               : 'cases))
; (fun parser_env ->
    let _1 = (peek_val parser_env 5 : string) in
    let _2 = (peek_val parser_env 4 : 'name_typed) in
    let _4 = (peek_val parser_env 2 : 'term) in
    let _6 = (peek_val parser_env 0 : 'cases) in
    Obj.repr(
# 250 "parser.mly"
                                           ( (_1, Some _2, _4) :: _6 )
# 1823 "parser.ml"
               : 'cases))
; (fun parser_env ->
    let _1 = (peek_val parser_env 4 : string) in
    let _3 = (peek_val parser_env 2 : 'term) in
    let _5 = (peek_val parser_env 0 : 'cases) in
    Obj.repr(
# 251 "parser.mly"
                                           ( (_1, None, _3) :: _5 )
# 1832 "parser.ml"
               : 'cases))
(* Entry theory *)
; (fun parser_env -> raise (YYexit (peek_val parser_env 0)))
|]
let yytables =
  { actions=yyact;
    transl_const=yytransl_const;
    transl_block=yytransl_block;
    lhs=yylhs;
    len=yylen;
    defred=yydefred;
    dgoto=yydgoto;
    sindex=yysindex;
    rindex=yyrindex;
    gindex=yygindex;
    tablesize=yytablesize;
    table=yytable;
    check=yycheck;
    error_function=parse_error;
    names_const=yynames_const;
    names_block=yynames_block }
let theory (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (yyparse yytables 1 lexfun lexbuf : Syntax.theory)
