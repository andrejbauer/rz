- NEW (2005-01-03) [Both]:

  Add support for applications of parameterized theories and 
  parameterized models (to model arguments).

- IMPROVEMENT (2004-12-30) [Andrej]:
  Add a flag that disables use of the IsPer and IsPredicate abbreviations.

- IMPROVEMENT (2004-12-30):
  Fold nested assures of the form

    assure x : s . true in
      assure y : t . true in
        assure z : u . phi in e

  to

    assure x:s, y:t, z:u . phi in e

  or similar syntax.

- IMPROVEMENT (2004-12-30):
  Consider adding Hilbert's epsilon ("any" operator):

   any x . phi(x) in t

  If you are going to do this, come up with at least one
  reasonable example first.

- IMPROVEMENT (2004-12-30):

  Automatically insert coersions :> and <: (that 
  still generate obligations in the output).

  [ CS: 2004-12-30 

      Mostly implemented.  It's a little bit ad-hoc in where it
      chooses to insert coercions (for example, it will convert
      explicit pairs of subset values to pairs of superset values, but
      won't do the same conversion if the syntactic pair is replaced
      by a variable).  This should be better documented, and probably
      more aggressive about doing safe (out-of-subset) coercions.

      There should also be a --nocoerce flag to turn this behavior off.
  ]


- BUG (2004-12-30) [Andrej]:
  Fix Outsyn.IsPredicate so that it refers not only to the
  predicate name but also its underlying type.

- NEW (2004-12-22) [Andrej]:
  allow parametrized axioms to be turned into polymorphic functions
  (when possible) instead of functors.

- BUG (2004-06-17) [Andrej]:
  missing obligations in output code for "let [x] = p in e"
  and "let x % r = p in e ".

- IMPROVEMENT (2004-06-17) [Andrej & Chris]:
  Make variable names more consistent. The rule is: delete all the
  vowels, except in the following cases:

    totality -> tot
    substitution -> sub

  Make sure that all the exceptional names contain vowels.

- IMPROVEMENT (2004-06-17) [Andrej]:
  Rename "thy" to "thr" XOR rename ".thr" to ".thy"

- IMPROVEMENT (2004-06-17) [Chris]:
  Use fewer implementations of contexts, maybe.

- IMPROVEMENT (2004-06-17):
  Comment source code.
    
- IMPROVEMENT (2004-06-17):
  Allow constant definitions of functions with arguments. Right now
  a function must be defined as an explicit lambda abstraction.

    [What should the syntax be?]

- NEW (2004-06-17):
  Add inductively defined sets which translate to (nice) recursive types.

- IMPROVEMENT (2004-06-17):
  Improve the toplevel program.

    [2004-07-01 CAS:  Done so far:
      *  Uses OCaml's generic command-line-option-processing functions 
         (the Arg library module), 
      *  Writes output to .mli files that could be run through
         ocamldoc, though the result is currently not pretty.
      *  Handles multiple filenames, and later files can refer to
         definitions in the earlier ones; see semilattice.thr
         and kuratowski2.thr.
     What else do we want to do?]
     

- NEW (2004-06-17):
  Write more examples

- NEW (2004-06-17):
  Write paper & tutorial (2004-06-17)
