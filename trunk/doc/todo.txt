- IMPROVEMENT (2004-12-30) [Andrej]:
  Add a flag that disables use of the IsPer and IsPredicate abbreviations.

- IMPROVEMENT (2004-12-30):
  Fold nested assures of the form

    assure x : s . true in
      assure y : t . true in
        assure z : u . phi in e

  to

    assure x:s, y:t, z:u . phi in e

  or similar syntax.

- IMPROVEMENT (2004-12-30):
  Consider adding Hilbert's epsilon ("any" operator):

   any x . phi(x) in t

  If you are going to do this, come up with at least one
  reasonable example first.

- IMPROVEMENT (2004-12-30):
  Introduce _stable_ subsets with a syntax different from ordinary
  subsets, e.g.,

    { x : s | phi(x) }      stable
    { x : s with phi(x) }   not stable

  For stable subsets we could avoid coersions :> and <: (but would
  still generate obligations in the output).

  [ CS: 2004-12-30 
      Started this, and added StableSubset up to and
      including the translation to Logic, except that right
      now subtyping only allows an implicit subout
        (using a value of the subset as if it were a member
         of the whole set)
      and *not* implici subins.
      
      But when I started thinking about the translation I realized
      that we probably need to insert the implicit subin and subout's,
      in order for translation to work correctly and to generate
      the appropriate obligations.  

      Of course, we could have done the same insertion of implicit
      subins and subouts for non-stable subset types, so I'm 
      now rather confused as to why we only wanted to do this for 
      stable subsets.
  ]


- BUG (2004-12-30) [Andrej]:
  Fix Outsyn.IsPredicate so that it refers not only to the
  predicate name but also its underlying type.

- NEW (2004-12-22) [Andrej]:
  allow parametrized axioms to be turned into polymorphic functions
  (when possible) instead of functors.

- BUG (2004-06-17) [Andrej]:
  missing obligations in output code for "let [x] = p in e"
  and "let x % r = p in e ".

- IMPROVEMENT (2004-06-17) [Andrej & Chris]:
  Make variable names more consistent. The rule is: delete all the
  vowels, except in the following cases:

    totality -> tot
    substitution -> sub

  Make sure that all the exceptional names contain vowels.

- IMPROVEMENT (2004-06-17) [Andrej]:
  Rename "thy" to "thr" XOR rename ".thr" to ".thy"

- IMPROVEMENT (2004-06-17) [Chris]:
  Use fewer implementations of contexts, maybe.

- IMPROVEMENT (2004-06-17):
  Comment source code.
    
- IMPROVEMENT (2004-06-17):
  Allow constant definitions of functions with arguments. Right now
  a function must be defined as an explicit lambda abstraction.

    [What should the syntax be?]

- NEW (2004-06-17):
  Add inductively defined sets which translate to (nice) recursive types.

- IMPROVEMENT (2004-06-17):
  Improve the toplevel program.

    [2004-07-01 CAS:  Done so far:
      *  Uses OCaml's generic command-line-option-processing functions 
         (the Arg library module), 
      *  Writes output to .mli files that could be run through
         ocamldoc, though the result is currently not pretty.
      *  Handles multiple filenames, and later files can refer to
         definitions in the earlier ones; see semilattice.thr
         and kuratowski2.thr.
     What else do we want to do?]
     

- NEW (2004-06-17):
  Write more examples

- NEW (2004-06-17):
  Write paper & tutorial (2004-06-17)
