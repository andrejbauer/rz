TITLE:

[ab: It will be hard to show fancy examples before we explain anything.
I would show some examples at the beginning and more later.]

[ab: we have to adress the question "what about program extraction?"]

Sections:
* Introduction/Motivation
   *  Initial examples (that don't require one to really know RZ)
* What RZ is (Semantics)
   * The intended realizability model:
      * Something abour realizers being total/terminating
   * Source language: terms and logic 
   * Output language: signatures with assertions
   * Realizability translation
* Fancier examples here?
* How RZ works (Implementation)
   * Parsing and typechecking occur
      *  Not much to say except perhaps for mentioning subtyping/coercions
   * Translation
   * TopTy and thinning
   * Optimization occurs
      * Simplifications, but not any real theorem-proving.
   * Phase-splitting:  functors into polymorphism
* Comparison with Coq extraction tool
   [ab: I like your email message]
* Future work
